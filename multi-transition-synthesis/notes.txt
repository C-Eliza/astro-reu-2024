Notes on Multi-transition synthesis
Trey Wenger - June 2024

The technique of multi-transition synthesis (MTS) involves applying
the techniques of multi-frequency synthesis (MFS) to individual
velocity channels of a dataset. That is, if we regrid an
interferometric dataset so that each spectral window has the same
*velocity* axis, then we can use MFS to image each channel across
all spectral windows.

Given the absence of MTS functionality in CASA, we have to "hack" this
together. We can nonetheless use high-throughput computing to speed up
the process.

Here are some basic steps to enable the application of MTS on a
compute cluster like scylla.

1. Download CASA
- https://casadocs.readthedocs.io/en/stable/notebooks/introduction.html#Modular-Packages
- I recommend installing the "modular" version (via pip) in a virtual environment
  (like an anaconda environment)

2. Get the data
- I've put some example data here: www.treywenger.com/public/g284.ms.tar.gz

3. Prepare the datasets (see casa_notes.py)
- First, we must re-grid the velocity axis of each spectral window to
  a common frame using the task CVEL2
- Next, we should probably SPLIT each channel into its own measurement set
- Then we image each channel
- Finally, we stitch all of the channel images together into a data cube

4. My advice: try this on just a couple of spectral windows first
   before attempting everything! Also, keep an eye on disk space.
   These datasets can easily balloon! You might need to delete
   "intermediate" data products (i.e., once you split all of the
   channels, you can probably delete the original data).

5. For now, let's not worry about CLEANING the images, although we will
   have to eventually...

The file "casa_notes.py" describes how I implemented MTS during my
tests. This will hopefully guide you in your CASA journey.

The file "slurm_example.sh" shows an example of a SLURM script that
demonstrates how we can image each channel independently on scylla.

The file "listobs.txt" is the LISTOBS output for this dataset, and
describes the data.

The file "restfreqs.txt" lists the rest frequencies for each RRL
spectral window.
